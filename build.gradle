plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'com.matthewprenger.cursegradle' version '1.4.0'

}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


repositories {
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

loom {
    runs {
        // This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
        datagen {
            inherit server
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=origamikings-api"
 
            runDir "build/datagen"
        }
    }
}
// Add the generated resources to the main source set
sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.
	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	modImplementation "software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${gecklib_version}"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
jar {
	manifest {
		attributes([
				"Specification-Title"     : "OrigamiKings API",
				"Specification-Vendor"    : "OrigamiKing3612",
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : mod_version,
				"Implementation-Vendor"   : "OrigamiKing3612",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}
// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
		modrinth {
			debugMode = false
			token = System.getenv("MODRINTH_TOKEN")
			projectId = "${project_id}"
			versionNumber = "${mod_version}"
			versionType = "release"
			uploadFile = remapJar
			gameVersions = ['1.20'] // Must be an array, even with only one version
			changelog = "1.20"
			dependencies {
				// The scope can be `required`, `optional`, `incompatible`, or `embedded`
				embedded.project "fabric-api"
				embedded.project "geckolib"
			}
			syncBodyFrom = rootProject.file("README.md").text
		}
	curseforge {
		project {
			apiKey = System.getenv("CURSEFORGE_TOKEN")
			id = "860033"
			releaseType = "release"
			changelogType = 'text'
//			changelog = file('changelog.txt')
			addGameVersion("1.20")
			addGameVersion("Fabric")
			addGameVersion("Java 17")

//			relations {
//				requiredDependency 'fabric-api'
//			}
			mainArtifact(remapJar)

			afterEvaluate {
				uploadTask.dependsOn("remapJar")
			}
		}
		options {
//			debug = true
			forgeGradleIntegration = false
		}
	}
}